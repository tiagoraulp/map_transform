#!/usr/bin/env python
PACKAGE = "map_transform"

import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("rinfl", double_t, 0, "Robot size (scale %)", 100, 5,500)
gen.add("sdefl", double_t, 0, "Sensing radius (scale %)", 100, 5, 500)
gen.add("rx", double_t, 0, "Robot center x (%)", 50, 0, 100)
gen.add("ry", double_t, 0, "Robot center y (%)", 50, 0, 100)
gen.add("rt", double_t, 0, "Robot center theta", 0, -180, 180)
gen.add("sx", double_t, 0, "Sensor center x (%)", 50, 0, 100)
gen.add("sy", double_t, 0, "Sensor center y (%)", 50, 0, 100)
gen.add("st", double_t, 0, "Sensor center theta", 0, -180, 180)
gen.add("dx", double_t, 0, "Sensor displacement x (%)", 50, 0, 100)
gen.add("dy", double_t, 0, "Sensor displacement y (%)", 50, 0, 100)
gen.add("angle_res", int_t, 0, "Orientation resolution", 32, 4, 256)
gen.add("sens_res", int_t, 0, "Sensing resolution", 128, 4, 512)

gen.add("debug", bool_t, 0, "Debugging with images", True)
gen.add("ground_truth", bool_t, 0, "Ground Truth", False)
gen.add("pub_once", bool_t, 0, "Publish only once", True)
gen.add("frga", bool_t, 0, "Find reachable points that generate actuation points", False)
gen.add("debug_angle", double_t,0, "Debug of Infl+Defl for angle", 0, -180, 180)

gen.add("x", double_t, 0, "X Position", 50, 0, 100)
gen.add("y", double_t, 0, "Y Position", 50, 0, 100)
gen.add("theta", double_t, 0, "Orientation", 0, -180, 180)

exit(gen.generate(PACKAGE, "visNC", "Parametersnc"))
